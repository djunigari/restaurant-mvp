import { Toaster } from "@/components/ui/sonner"
import { getUser } from "@/lib/auth/dal"
import type { Metadata } from "next"
import { Geist, Geist_Mono } from "next/font/google"
import "../globals.css"
import { TRPCProvider } from "../trpc/client"

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
})

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const user = await getUser()

  // const requestHeaders = await headers()
  // const deviceId = requestHeaders.get("x-device-id")
  // const fingerprint = requestHeaders.get("x-device-fingerprint")

  // if (!deviceId || !fingerprint) {
  //   redirect("/unauthorized")
  // }
  // if (typeof deviceId !== "string" || typeof fingerprint !== "string") {
  //   redirect("/unauthorized")
  // }
  // const device = await prisma.device.findUnique({
  //   where: { id: deviceId },
  // })

  // if (!device || !device.authorized || device.fingerprint !== fingerprint) {
  //   redirect("/unauthorized")
  // }

  return (
    <html lang="en">
      <TRPCProvider>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          {children}
          <Toaster />
        </body>
      </TRPCProvider>
    </html>
  )
}
